function [all_data, expr_meta] = fcsfolderread(foldername, varargin)
%fcsfolderread    extract data from all .fcs files in foldername
%   Take in one folder name, and parse all the fcs files inside the
%   folder according to experiment and plate. Work on FCS 3.0 data for
%   both LSRII and Stratedigm
%
%   [all_data, expr_meta] = fcsfolderread(foldername) returns all the
%   parsed data inside foldername folder.
%    
%   [all_data, expr_meta] = fcsfolderread(foldername, varargin) takes in
%   another argument to specify channels of interests. By default, varagin
%   is 'all'. In practice, the channel struct should be generated by
%   either pstrat for stratedigm, or plsr for LSRII.
%
%   See also PSTRAT
% 
%   written by BH @ 20120713

% machine detect

% mode (tube/plate) detect

tic

%
if nargin < 2
    fcsparse_arg = 'all';
else
    fcsparse_arg = varargin{1};
end

if nargin < 1
    foldername = '../data';
end

% output
fprintf('\nReading folder:\n')
disp(foldername)
% fprintf('Loading ')

% list fcs files
[~,~,filenamelist] = dirr(foldername, 'name');
filenamelist_len = size(filenamelist, 2);
filenamelist_counter = 0;

% record define
all_plates_data = {};
all_plates_time = {};

Plates_name = {};

% data extraction
for filename = filenamelist
    
    % plot progres
    filenamelist_counter = mod(filenamelist_counter + 1, floor(filenamelist_len/10));
    
    if filenamelist_counter == 0
        fprintf('*')
    end
    
    % is fcs file?
    filename_str = filename{1};
    if ~isempty(regexp(filename_str, '.fcs$', 'ONCE'))
        [datastruct, metadata]= fcsparse(filename_str, fcsparse_arg);
        
        if isfield(metadata, 'plate_id')
            plate_name = underscorify([metadata.expr_name, '_', metadata.plate_id]);
        else
            plate_name = underscorify(metadata.expr_name);
        end
        
        Plate_index = find(strcmp(plate_name, Plates_name));
        
        if isempty(Plate_index)
            
            % create new plate
            all_plates_data{end+1} = cell(8, 12);
            all_plates_time{end+1} = cell(8, 12);
            
            % add to plate name list
            Plates_name{end+1} = plate_name;
            
            % update index
            Plate_index = size(Plates_name,1);
        end
        
        all_plates_data{Plate_index}{metadata.row, metadata.col} = datastruct;
        all_plates_time{Plate_index}{metadata.row, metadata.col} = metadata.begin_time;
    end
end

% formating
fprintf('\n\n')

% output
all_data.data = all_plates_data;
all_data.time = all_plates_time;

expr_meta.plate_name = Plates_name;
expr_meta.para = fieldnames(datastruct);

toc